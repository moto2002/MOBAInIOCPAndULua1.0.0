using UnityEngine;
using System.Collections;
using OneByOne;

public class LoginHandler : MonoBehaviour,IHandler {

    ScreenProcess rp;

    void Start() {
        rp = GetComponent<ScreenProcess>();
    }

    public void MessageReceive(SocketModel model)
    {
        switch (model.command) { 
            case LoginProtocol.CREATE_SRES:
                create(model.getMessage<int>());
                break;
            case LoginProtocol.LOGIN_SRES:
                login(model.getMessage<int>());
                break;
        }
    }

    void create(int result) {
        switch (result) { 
            case 0:
                GameData.errors.Add(new ErrorModel("注册成功", rp.registerClose));
                break;
            case -1:
                GameData.errors.Add(new ErrorModel("帐号已存在", rp.registerClick));
                break;
            case -2:
                GameData.errors.Add(new ErrorModel("注册信息不合法", rp.registerClick));
                break;
            default:
                GameData.errors.Add(new ErrorModel("哇擦 返回的什么gui", rp.registerClose));
                break;
        }
    }

    void login(int result)
    {
        switch (result) { 
            case -1:
                GameData.errors.Add(new ErrorModel("帐号不存在"));
                break;
            case -2:
                GameData.errors.Add(new ErrorModel("帐号已登录"));
                break;
            case -3:
                GameData.errors.Add(new ErrorModel("密码错误"));
                break;
            case -4:
                GameData.errors.Add(new ErrorModel("输入不合法"));
                break;
            case 0:
                Application.LoadLevel(1);
                break;
            default:
                GameData.errors.Add(new ErrorModel("哇擦 返回的什么gui"));
                break;
        }
    }
}
